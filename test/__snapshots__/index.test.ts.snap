// Vitest Snapshot v1

exports[`attributify > extract1 1`] = `
"
  <view >
    <button
      h-80 text-center flex flex-col align-center select-none all:transition-400
      
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      class=\\"text-red font-bold bg-blue-400 bg-hover:blue-400 bg-dark:!blue-400 bg-dark:hover:blue-400\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      my-prop
      non-value
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      
      
      
      
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4 my-attr-y-1 my-attr-x-2 my-attr-sm\\">
      Button
    </button>

    <button 
      
      
      
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button  class=\\"border border-red\\">
      Button
    </button>

    <button  class=\\"flex flex-col flex-wrap\\">
      Button
    </button>

    <a  un-text=\\"blue\\" class=\\"text-red\\">This conflicts with links' text prop</a>

    <button 
      
      
      
      
      
     class=\\"bg-blue-400 bg-hover:blue-500 bg-dark:blue-500 bg-dark:hover:blue-600 text-sm text-white font-mono font-light p-y-2 p-x-4 border-2 border-rounded border-blue-200\\">
      Button
    </button>

    <button 
      
     class=\\"bg-#333 bg-grey-200 bg-[#444]/40 bg-red/50\\">
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
"
`;

exports[`attributify > extract1 2`] = `
"
<template>
  <div h-80 text-center flex flex-col align-center select-none all:transition-400>
    <input type=\\"checkbox\\" peer mt-a>
    <div mb-a group peer-checked=\\"text-4xl\\">
      <div
        font-100 text-4xl mb--3 p-10
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
      >
        ~
      </div>
      <div text-5xl font-100 sm=\\"bg-blue-600\\">
        unocss
      </div>
      <div op-20 font-200 mt-1 tracking-wider group-hover=\\"text-teal-400 op-50\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div flex>
    <div ma inline-flex relative h-14>
      <input type=\\"text\\" m-0 pt-4 px-4 text-true-gray-800 peer 
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\">
      <label absolute leading-1rem left-4 pointer-events-none text-gray-7 top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
      >Experience now</label>
    </div>
  </div>
</template>

<script  lang=\\"ts\\" setup>
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style></style>
"
`;

exports[`attributify > extract2 1`] = `
"
  <view >
    <button
      h-80 text-center flex flex-col align-center select-none all:transition-400
      bg=\\"blue-400 hover:blue-400 dark:!blue-400 dark:hover:blue-400\\"
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      class=\\"text-red font-bold\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      my-prop
      non-value
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      my-attr=\\"y-1 x-2 sm\\"
    >
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
    >
      Button
    </button>

    <button border=\\"~ red\\">
      Button
    </button>

    <button flex=\\"~ col wrap\\">
      Button
    </button>

    <a text=\\"red\\"  class=\\"text-blue\\">This conflicts with links' text prop</a>

    <button 
      bg=\\"blue-400 hover:blue-500 dark:blue-500 dark:hover:blue-600\\"
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      border=\\"2 rounded blue-200\\"
    >
      Button
    </button>

    <button 
      bg=\\"#333 grey-200 [#444]/40 red/50\\"
    >
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
"
`;

exports[`attributify > extract2 2`] = `
"
<template>
  <div h-80 text-center flex flex-col align-center select-none all:transition-400>
    <input type=\\"checkbox\\" peer mt-a>
    <div mb-a group peer-checked=\\"text-4xl\\">
      <div
        font-100 text-4xl mb--3 p-10
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
      >
        ~
      </div>
      <div text-5xl font-100 sm=\\"bg-blue-600\\">
        unocss
      </div>
      <div op-20 font-200 mt-1 tracking-wider group-hover=\\"text-teal-400 op-50\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div flex>
    <div ma inline-flex relative h-14>
      <input type=\\"text\\" m-0 pt-4 px-4 text-true-gray-800 peer 
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\">
      <label absolute leading-1rem left-4 pointer-events-none text-gray-7 top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
      >Experience now</label>
    </div>
  </div>
</template>

<script  lang=\\"ts\\" setup>
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style></style>
"
`;

exports[`attributify > extract3 1`] = `
"
  <view >
    <button
      h-80  flex    
      
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      class=\\"text-red font-bold text-center flex-col align-center select-none all:transition-400 bg-blue-400 bg-hover:blue-400 bg-dark:!blue-400 bg-dark:hover:blue-400 non-value\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      my-prop
      
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      
      
      
      my-attr=\\"y-1 x-2 sm\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button 
      
      
      
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button  class=\\"border border-red\\">
      Button
    </button>

    <button  class=\\"flex flex-col flex-wrap\\">
      Button
    </button>

    <a  un-text=\\"blue\\" class=\\"text-red\\">This conflicts with links' text prop</a>

    <button 
      
      
      
      
      
     class=\\"bg-blue-400 bg-hover:blue-500 bg-dark:blue-500 bg-dark:hover:blue-600 text-sm text-white font-mono font-light p-y-2 p-x-4 border-2 border-rounded border-blue-200\\">
      Button
    </button>

    <button 
      
     class=\\"bg-#333 bg-grey-200 bg-[#444]/40 bg-red/50\\">
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
"
`;

exports[`attributify > extract3 2`] = `
"
<template>
  <div h-80  flex     class=\\"text-center flex-col align-center select-none all:transition-400\\">
    <input type=\\"checkbox\\"   class=\\"peer mt-a\\">
    <div   peer-checked=\\"text-4xl\\" class=\\"mb-a group\\">
      <div
           
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
       class=\\"font-100 text-4xl mb--3 p-10\\">
        ~
      </div>
      <div   sm=\\"bg-blue-600\\" class=\\"text-5xl font-100\\">
        unocss
      </div>
      <div     group-hover=\\"text-teal-400 op-50\\" class=\\"op-20 font-200 mt-1 tracking-wider\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div flex>
    <div     class=\\"ma inline-flex relative h-14\\">
      <input type=\\"text\\"      
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\" class=\\"m-0 pt-4 px-4 text-true-gray-800 peer\\">
      <label      top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
       class=\\"absolute leading-1rem left-4 pointer-events-none text-gray-7\\">Experience now</label>
    </div>
  </div>
</template>

<script  lang=\\"ts\\"  class=\\"setup\\">
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style></style>
"
`;

exports[`attributify > extract4 1`] = `
"
  <view >
    <button
            
      
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      class=\\"text-red font-bold h-80 text-center flex flex-col align-center select-none all:transition-400 bg-blue-400 bg-hover:blue-400 bg-dark:!blue-400 bg-dark:hover:blue-400 my-prop non-value\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      
      
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      
      
      
      my-attr=\\"y-1 x-2 sm\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button 
      
      
      
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button  class=\\"border border-red\\">
      Button
    </button>

    <button  class=\\"flex flex-col flex-wrap\\">
      Button
    </button>

    <a  un-text=\\"blue\\" class=\\"text-red\\">This conflicts with links' text prop</a>

    <button 
      
      
      
      
      
     class=\\"bg-blue-400 bg-hover:blue-500 bg-dark:blue-500 bg-dark:hover:blue-600 text-sm text-white font-mono font-light p-y-2 p-x-4 border-2 border-rounded border-blue-200\\">
      Button
    </button>

    <button 
      
     class=\\"bg-#333 bg-grey-200 bg-[#444]/40 bg-red/50\\">
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
"
`;

exports[`attributify > extract4 2`] = `
"
<template>
  <div        class=\\"h-80 text-center flex flex-col align-center select-none all:transition-400\\">
    <input type=\\"checkbox\\"   class=\\"peer mt-a\\">
    <div   peer-checked=\\"text-4xl\\" class=\\"mb-a group\\">
      <div
           
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
       class=\\"font-100 text-4xl mb--3 p-10\\">
        ~
      </div>
      <div   sm=\\"bg-blue-600\\" class=\\"text-5xl font-100\\">
        unocss
      </div>
      <div     group-hover=\\"text-teal-400 op-50\\" class=\\"op-20 font-200 mt-1 tracking-wider\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div  class=\\"flex\\">
    <div     class=\\"ma inline-flex relative h-14\\">
      <input type=\\"text\\"      
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\" class=\\"m-0 pt-4 px-4 text-true-gray-800 peer\\">
      <label      top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
       class=\\"absolute leading-1rem left-4 pointer-events-none text-gray-7\\">Experience now</label>
    </div>
  </div>
</template>

<script  lang=\\"ts\\" setup>
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style></style>
"
`;
